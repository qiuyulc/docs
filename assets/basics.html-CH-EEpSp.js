import{_ as n,c as a,a as p,o as t}from"./app-Bj_TYjpC.js";const e="/blog/assets/image-Dajs9nb_.png",o="/blog/assets/%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95-C8ayHZZC.png",l="/blog/assets/routing-demo-home-Dx5y2U8O.png",c="/blog/assets/routing-demo-%E9%A1%B5%E9%9D%A2%E8%B7%AF%E7%94%B1-CneU1Ajm.png",i="/blog/assets/routing-demo-%E5%B5%8C%E5%A5%97%E8%B7%AF%E7%94%B1-CojxR2U9.png",u="/blog/assets/routing-demo-%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1-Ci0GGmpt.png",r="/blog/assets/routing-demo-%E5%8A%A8%E6%80%81%E5%B5%8C%E5%A5%97%E8%B7%AF%E7%94%B1-DCNgHvXy.png",d="/blog/assets/routing-demo-%E6%97%A0%E9%99%90%E8%B7%AF%E7%94%B1%E7%AE%80%E4%BB%8B-DmgB9Ciu.png",k="/blog/assets/routing-demo-%E6%97%A0%E7%BA%BF%E8%B7%AF%E7%94%B1-PK6QoYk4.png",v={};function m(g,s){return t(),a("div",null,s[0]||(s[0]=[p(`<h1 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h1><p>在 YouTuKe 上发现的一个 NextJS14 的教学视频，下面是我做的一些笔记。可以看笔记，也可以直接去看视频。 <a href="https://www.youtube.com/watch?v=ZjAqacIC_3c&amp;list=PLC3y8-rFHvwjOKd6gdf4QtV1uYNiQnruI" target="_blank" rel="noopener noreferrer">NextJS14</a></p><h2 id="hello-world" tabindex="-1"><a class="header-anchor" href="#hello-world"><span>Hello World</span></a></h2><h3 id="node-版本" tabindex="-1"><a class="header-anchor" href="#node-版本"><span>Node 版本</span></a></h3><p>Node.js 18.17 或更高版本。</p><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">npx create-next-app@latest</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="配置项" tabindex="-1"><a class="header-anchor" href="#配置项"><span>配置项</span></a></h4><p><img src="`+e+'" alt="alt text"></p><h4 id="文件目录" tabindex="-1"><a class="header-anchor" href="#文件目录"><span>文件目录</span></a></h4><p><img src="'+o+`" alt="alt text"></p><h4 id="package-json" tabindex="-1"><a class="header-anchor" href="#package-json"><span>package.json</span></a></h4><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello-world&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.1.0&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;private&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;next dev&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;next build&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;next start&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;lint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;next lint&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;react&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^18&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;react-dom&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^18&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;next&quot;</span><span class="token operator">:</span> <span class="token string">&quot;14.1.3&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;devDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;typescript&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^5&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;@types/node&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^20&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;@types/react&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^18&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;@types/react-dom&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^18&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;autoprefixer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^10.0.1&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;postcss&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^8&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;tailwindcss&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.3.0&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;eslint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^8&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;eslint-config-next&quot;</span><span class="token operator">:</span> <span class="token string">&quot;14.1.3&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="react-server-components-rsc" tabindex="-1"><a class="header-anchor" href="#react-server-components-rsc"><span>React Server Components(RSC)</span></a></h4><h2 id="路由" tabindex="-1"><a class="header-anchor" href="#路由"><span>路由</span></a></h2><p>Next 的路由是 <strong>约定式</strong> 的，基于文件系统。</p><ol><li>重复上面步骤创建 routing-demo</li><li>删除 <code>src/app</code> 中的 <code>app</code> 文件中所有的内容。</li><li>初始化路由</li></ol><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token comment">// src/app/page.tsx</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Home</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Welcome Home</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行 <code>npm run dev</code> 运行，访问 http://localhost:3000，我们会看到下面的内容。</p><p><img src="`+l+'" alt="home"></p><p>另外可以发现，Next 自动创建了 layout.tsx。</p><ol start="4"><li>页面路由</li></ol><p>如果我们想创建 http://localhost:3000/about 或者是 http://localhost:3000/profile 这种的页面路由。我们可以在 <code>app</code> 中新建两个文件夹， 分别是 <code>about</code> 和 <code>profile</code>，然后再创建 <code>page.tsx</code>。</p><p>这时，我们的目录结构如下图所示：</p><p><img src="'+c+'" alt="页面路由"></p><p>此时我们就可以在浏览器的地址栏中，通过 <code>/about</code> 或者 <code>/profile</code> 来切换页面。</p><ol start="5"><li>嵌套路由</li></ol><p>创建 <code>blog</code> 文件夹，创建 <code>page.tsx</code> 文件，另外在 <code>page.tsx</code> 的同级目录下分别创建 <code>first</code> 和 <code>second</code> 以及它们的 <code>page.tsx</code> 文件。 此时我们就可以在地址栏中，通过 <code>/blog/first</code> 和 <code>/blog/second</code> 来访问这两个页面的内容。</p><p>格式目录如下：</p><p><img src="'+i+'" alt="嵌套路由"></p><ol start="6"><li>动态路由</li></ol><p>在实际的应用场景中，虽然嵌套路由可以解决 <code>/blog/first</code> 和 <code>/blog/second</code> 这类页面需求，但是如果我们是一个商品列表，点击商品跳转详情。这时候使用嵌套路由就不太合适了。</p><p>这时候我们需要使用另一个模式去解决(动态路由)。</p><p>在 Next 中，<code>[文件名]</code> 是一种动态传递参数的约定。</p><p>我们可以通过这种方式来向子页面传递动态的参数。</p><p>新建文件夹 <code>products</code>，然后在 <code>products</code> 中创建 <code>[productId]</code> 文件夹，分别在各自文件夹中创建 <code>page.tsx</code>。 如下所示：</p><p><img src="'+u+`" alt="动态路由"></p><p><code>[productId]</code> 文件代码：</p><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">ProductDetails</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  params<span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  params<span class="token operator">:</span> <span class="token punctuation">{</span> productId<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Details about </span><span class="token punctuation">{</span>params<span class="token punctuation">.</span>productId<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时，我们通过 http://localhost:3000/products/productId 传递不同的 productId 值来展示不同 productId 的界面了。</p><ol start="7"><li>嵌套动态路由</li></ol><p>应用场景：每个商品的评论详情，此时我们的路由可能是这样的。 <code>http://localhost:3000/products/2/reviews/2</code></p><p>根据上面这个路由，以及前面的内容，其实可以推导出需要做的内容。</p><p>如下所示：</p><p><img src="`+r+`" alt="嵌套路由多个路由段"></p><p><code>[reviewId]</code>代码：</p><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">ReviewDetail</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  params<span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  params<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    productId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">    reviewId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      Review </span><span class="token punctuation">{</span>params<span class="token punctuation">.</span>productId<span class="token punctuation">}</span><span class="token plain-text"> for product </span><span class="token punctuation">{</span>params<span class="token punctuation">.</span>reviewId<span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="8"><li>捕获所有路由</li></ol><p>在博客项目中，你可能会遇到这样的场景，</p><p><img src="`+d+'" alt="博客"></p><p>路由的组成是不固定的，这时候我们可以使用另一种方式来解决这个问题。</p><p><img src="'+k+`" alt="无限路由"></p><p><strong>注意：</strong> <code>page.tsx</code> 是在 <code>[[...slug]]</code> 下的。</p><p>下面是 <code>page.tsx</code> 的代码。</p><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Docs</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  params<span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  params<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    slug<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span>slug<span class="token operator">?.</span>length <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        Viewing docs for feature </span><span class="token punctuation">{</span>params<span class="token punctuation">.</span>slug<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token plain-text"> and concept </span><span class="token punctuation">{</span>params<span class="token punctuation">.</span>slug<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span>slug<span class="token operator">?.</span>length <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Viewing docs for feature </span><span class="token punctuation">{</span>params<span class="token punctuation">.</span>slug<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Docs</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在可以在地址栏中通过 docs 后不同的路由地址 查看打印的内容 <code>http://localhost:3000/docs/1/v</code>、<code>http://localhost:3000/docs/1</code>。</p><p>另外还有一点<code>[[...slug]]</code> 如果变成 <code>[...slug]</code> 那么上面代码中<code>return &lt;h1&gt;Docs&lt;/h1&gt;;</code>是不会被渲染的，页面会出现 404。</p><ol start="9"><li>未找到页面 (not-found)</li></ol><p>在主页面中，如果不想使用 Next 自带的 404 界面，我们可以在 <code>src</code> 目录下创建 <code>not-found.tsx</code> 文件。</p><p>如果在其他的路由下想创建 404 页面，我们需要在当前路由下的文件中创建 <code>not-found.tsx</code>，然后在 <code>page.tsx</code> 中使用。如下：</p><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> notFound <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;next/navigation&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">ReviewDetail</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  params<span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  params<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    productId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">    reviewId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span>reviewId<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">notFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      Review </span><span class="token punctuation">{</span>params<span class="token punctuation">.</span>productId<span class="token punctuation">}</span><span class="token plain-text"> for product </span><span class="token punctuation">{</span>params<span class="token punctuation">.</span>reviewId<span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果当前文件目录中没有 <code>not-found.tsx</code> 那么它就会往上级寻找。如果都没有的话，就会显示默认的 404 界面。</p><p>404 页面，Next 为我们提供了默认的 404 界面。</p><p>。。。未完待续</p>`,64)]))}const h=n(v,[["render",m],["__file","basics.html.vue"]]),x=JSON.parse('{"path":"/nextjs/basics.html","title":"NestJS","lang":"zh-CN","frontmatter":{"title":"NestJS","description":"NestJS"},"headers":[{"level":2,"title":"Hello World","slug":"hello-world","link":"#hello-world","children":[{"level":3,"title":"Node 版本","slug":"node-版本","link":"#node-版本","children":[]},{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]}]},{"level":2,"title":"路由","slug":"路由","link":"#路由","children":[]}],"git":{"updatedTime":1710765875000,"contributors":[{"name":"Mrlishizhen","username":"Mrlishizhen","email":"718647063@qq.com","commits":2,"url":"https://github.com/Mrlishizhen"}]},"filePathRelative":"nextjs/basics.md"}');export{h as comp,x as data};
