import{_ as n,c as a,a as t,o as e}from"./app-Bj_TYjpC.js";const l={};function p(c,s){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="什么是css" tabindex="-1"><a class="header-anchor" href="#什么是css"><span>什么是CSS</span></a></h1><h2 id="css是什么" tabindex="-1"><a class="header-anchor" href="#css是什么"><span>CSS是什么</span></a></h2><p>CSS（Cascading Style Sheets 层叠样式表）</p><h2 id="作用" tabindex="-1"><a class="header-anchor" href="#作用"><span>作用</span></a></h2><p>为文档添加样式。</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">h1</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">font-size</span><span class="token punctuation">:</span>5em<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一个css语法由选择器开始，然后花括号，花括号内是属性和值。</p><h2 id="css规范" tabindex="-1"><a class="header-anchor" href="#css规范"><span>CSS规范</span></a></h2><p>由W3C中的一个名叫<a href="https://www.w3.org/Style/CSS/" target="_blank" rel="noopener noreferrer">CSS Working Group</a>的团队维护。</p><h2 id="引入css样式的方式" tabindex="-1"><a class="header-anchor" href="#引入css样式的方式"><span>引入CSS样式的方式</span></a></h2><ul><li>内联样式</li></ul><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token value css language-css"><span class="token property">font-size</span><span class="token punctuation">:</span>18px<span class="token punctuation">;</span></span><span class="token punctuation">&#39;</span></span></span><span class="token punctuation">&gt;</span></span>Hello CSS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>内部样式表</li></ul><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span>
<span class="line">        <span class="token selector">p</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Hello CSS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>外部样式表</li></ul><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>style.css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Hello CSS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="css渲染流程" tabindex="-1"><a class="header-anchor" href="#css渲染流程"><span>CSS渲染流程</span></a></h2><ol><li>浏览器加载HTML文件</li><li>将HTML文件转换成一个DOM。</li><li>浏览器拉取该HTML文件相关的大部分资源。图片、视频 css样式，js脚本则会稍后处理。</li><li>解析css文件，生成CSSOM。将不同的规则应用到对应的DOM节点上。生成一个渲染树。</li><li>渲染书会依照应该出现的结构进行布局。</li><li>最后网页展示在屏幕上（着色）。</li></ol><h2 id="无法解析的css代码" tabindex="-1"><a class="header-anchor" href="#无法解析的css代码"><span>无法解析的CSS代码</span></a></h2><p>浏览器遇到无法解析的css样式会跳过这个样式，继续解析下一个。选择器同样也是这样的。</p>`,21)]))}const o=n(l,[["render",p],["__file","01.html.vue"]]),u=JSON.parse('{"path":"/web/css/01.html","title":"CSS","lang":"zh-CN","frontmatter":{"title":"CSS","description":"CSS"},"headers":[{"level":2,"title":"CSS是什么","slug":"css是什么","link":"#css是什么","children":[]},{"level":2,"title":"作用","slug":"作用","link":"#作用","children":[]},{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":2,"title":"CSS规范","slug":"css规范","link":"#css规范","children":[]},{"level":2,"title":"引入CSS样式的方式","slug":"引入css样式的方式","link":"#引入css样式的方式","children":[]},{"level":2,"title":"CSS渲染流程","slug":"css渲染流程","link":"#css渲染流程","children":[]},{"level":2,"title":"无法解析的CSS代码","slug":"无法解析的css代码","link":"#无法解析的css代码","children":[]}],"git":{"updatedTime":1732785657000,"contributors":[{"name":"qiuyulc","username":"qiuyulc","email":"qiuyulc@gmail.com","commits":2,"url":"https://github.com/qiuyulc"}]},"filePathRelative":"web/css/01.md"}');export{o as comp,u as data};
